{"ast":null,"code":"import { environment } from './../environments/environment';\nimport { EventEmitter } from '@angular/core';\nimport { EMPTY } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PostsService = /*#__PURE__*/(() => {\n  class PostsService {\n    constructor(http) {\n      this.http = http;\n      this.postAPI = environment.postAPI;\n      this.postsAPI = environment.postsAPI;\n      this.colorEmmit = new EventEmitter();\n    }\n    getPosts() {\n      return this.http.get(this.postsAPI).pipe(map(obj => obj));\n    }\n    getPost(id) {\n      const url = `${this.postAPI}/${id}`;\n      return this.http.get(url).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n    }\n    showMessage(msg, isError = false) {\n      // this.snackBar.open(msg, 'x', {\n      //   duration: 5000,\n      //   horizontalPosition: \"right\",\n      //   verticalPosition: \"top\",\n      //   panelClass: isError ? ['msg-error'] : ['msg-success']\n      // })\n      console.log('ERROR ', msg);\n    }\n    errorHandler(e) {\n      // console.log(e);\n      this.showMessage('Ocorreu um erro!', true);\n      return EMPTY;\n    }\n    // getColorPage(): any {\n    //   return this.color;\n    // }\n    setColorPage(color) {\n      this.color = color;\n      this.colorEmmit.emit(color);\n    }\n  }\n  PostsService.ɵfac = function PostsService_Factory(t) {\n    return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostsService,\n    factory: PostsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}